[project]
name = "naagin"
version = "0.2.6"
description = "A server implementation for a certain swimsuit gacha game."
requires-python = ">=3.13"
dependencies = [
  "asyncstdlib",
  "async-lru",
  "aiopath",
  "filelock",
  "cryptography",
  "rich",
  "pydantic",
  "pydantic-settings",
  "sqlparse",
  "asyncpg",
  "sqlalchemy",
  "httpx",
  "starlette",
  "orjson",
  "fastapi[standard]",
]

[dependency-groups]
dev = [
  "ruff",
]
dump = [
  "frozendict",
  "genson",
  "datamodel-code-generator",
]
proxy = [
  "mitmproxy==11.1.0",
]

[tool.uv]
package = false
default-groups = "all"
override-dependencies = [
  "httptools; sys_platform == 'never'",
]

[tool.ruff]
src = ["naagin"]
line-length = 120

[tool.ruff.lint]
preview = true
explicit-preview-rules = true
select = ["ALL"]
extend-select = ["PLC0415"]
ignore = [
  "A",       # flake8-builtins     *
  "D1",      # pydocstyle          undocumented-*
  "COM812",  # flake8-commas       missing-trailing-comma
  "D203",    # pydocstyle          incorrect-blank-line-before-class
  "D212",    # pydocstyle          multi-line-summary-first-line
  "E501",    # pycodestyle         line-too-long
  "ERA001",  # eradicate           commented-out-code
  "PLC0414", # Convention          useless-import-alias
]
extend-safe-fixes = [
  "F401", # Pyflakes            unused-import
]
extend-unsafe-fixes = [
  "RET505", # flake8-return       superfluous-else-return
]

[tool.ruff.lint.per-file-ignores]
"naagin/middlewares/**.py" = [
  "TID251", # flake8-tidy-imports banned-api
]

[tool.ruff.lint.isort]
force-single-line = true

[tool.ruff.lint.flake8-bugbear]
extend-immutable-calls = ["fastapi.Depends", "fastapi.datastructures.Default"]

[tool.ruff.lint.flake8-boolean-trap]
extend-allowed-calls = ["fastapi.datastructures.Default"]

[tool.ruff.lint.flake8-tidy-imports.banned-api]
"pathlib.Path".msg = "Use aiopath.AsyncPath instead."
"typing.Optional".msg = "Use X | Y for type annotations."
"aiopath.Path".msg = "Use aiopath.AsyncPath instead."
"starlette.requests.Request".msg = "Use fastapi.Request instead."
"starlette.responses.Response".msg = "Use fastapi.Response instead."
"starlette.middleware.Middleware".msg = "Use fastapi.middleware.Middleware instead."
"starlette.datastructures.Headers".msg = "Use fastapi.datastructures.Headers instead."
"starlette.exceptions.HTTPException".msg = "Use fastapi.exceptions.StarletteHTTPException instead."
"sqlalchemy.ext.asyncio.AsyncSession".msg = "Use naagin.classes.AsyncSession instead."
"pydantic.BaseModel".msg = "Use naagin.bases.ModelBase instead."
"sqlalchemy.orm.DeclarativeBase".msg = "Use naagin.bases.SchemaBase instead."
"pydantic_settings.BaseSettings".msg = "Use naagin.bases.SettingsBase instead."

[tool.ruff.format]
skip-magic-trailing-comma = true
